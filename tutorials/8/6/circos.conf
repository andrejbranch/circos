
# Define a parameter that will be used in <rules> block to
# globally toggle rules on/off. This can be convenient if you
# have many <rules> blocks and want to turn them all off using
# one parameter.
use_rules = yes

<<include etc/colors_fonts_patterns.conf>>

<<include ideogram.conf>>
<<include ticks.conf>>

<image>
<<include etc/image.conf>>
</image>

karyotype                   = data/karyotype/karyotype.human.txt
chromosomes_units           = 1000000
chromosomes_display_default = yes

#chromosomes = hs1;hs2;hs3;hs4;hs5;hs6

<plots>

type       = histogram
file       = data/8/histogram.txt
color      = black
thickness  = 2
extend_bin = no

<plot>
r0   = 0.3r
r1   = 0.975r
min  = -0.6
max  = 0.6

# define background colors and cutoffs
bgy1 = 0.2
bgy2 = 0.5
bgc1 = orange
bgc2 = blue

<backgrounds>
<background>
color = lconf(.,bgc2)
# reference the background cutoffs using conf(.,PARAM)
y0    = conf(.,bgy2)
</background>
<background>
color = vlconf(.,bgc2)
y1    = conf(.,bgy2)
y0    = conf(.,bgy1)
</background>
<background>
color = vvlconf(.,bgc2)
y1    = conf(.,bgy1)
y0    = 0
</background>
<background>
color = vvlconf(.,bgc1)
y1    = 0
y0    = -conf(.,bgy1)
</background>
<background>
color = vlconf(.,bgc1)
y1    = -conf(.,bgy1)
y0    = -conf(.,bgy2)
</background>
<background>
color = lconf(.,bgc1)
y1    = -conf(.,bgy2)
</background>

</backgrounds>

<axes>
<axis>
color     = grey_a1
thickness = 2
spacing   = 0.25r
</axis>
<axis>
color     = grey_a3
thickness = 1
spacing   = 0.05r
</axis>
<axis>
color     = grey_a1
thickness = 5
position  = 0
</axis>
# at each background cutoff, draw a white line
<axis>
color     = white
thickness = 5
position  = -conf(.,bgy2),-conf(.,bgy1),conf(.,bgy1),conf(.,bgy2)
</axis>
</axes>

<rules>
use        = conf(use_rules)
# remap the histogram value from the range [-0.6,0.6] onto the index [0,5], then
# use the index to select the color from the list
# dorange orange lorange lblue blue dblue
# 
# Perl syntax for referencing an element of a list is qw(a b c d)[index]
# where index starts at 0.
<rule>
condition  = 1
fill_color = eval(qw(dorange orange lorange lblue blue dblue)[remap_round(var(value),-0.6,0.6,0,5)])
</rule>

</rules>

</plot>

</plots>

<<include etc/housekeeping.conf>>
data_out_of_range* = trim
